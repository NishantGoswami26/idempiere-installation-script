#!/bin/bash

# Copy this file to your ticket folder.
# Update it as you deem appropriate for the details of that ticket deployment.
# See the deploy.sh.readme.md for more instructions

if [ "$TERM" = "screen" ]
then
    echo Confirmed inside screen or tmux to preserve session if disconnected.
else
    echo Exiting... not running inside screen or tumx to preserve session if disconnected.
    exit 1
fi

source /opt/chuboe/idempiere-installation-script/utils/chuboe.properties

DEPLOY_TICKET=${PWD##*/}
echo HERE: Current Ticket: $DEPLOY_TICKET
DEPLOY_TICKET_DIR=${PWD}
echo HERE: Current Directory: $DEPLOY_TICKET_DIR

PACK_DIR=2Pack
INSTALL_DATE=`date +%Y%m%d`_`date +%H%M%S`

echo "NOTE: run as chuboe/ubuntu user (user with sudo priviledges)"
echo "NOTE: Consider tee output to file example:"
echo "./deploy.sh |& tee /tmp/output_"$DEPLOY_TICKET"_"$INSTALL_DATE".log"
echo "  "
echo "NOTE: you have 10 seconds to stop this script"
sleep 10

echo "************************************"
echo "Starting deploy of $DEPLOY_TICKET"
echo "************************************"

# read -p "Press enter when finished"

echo "******************"
echo "Special instructions"
echo "******************"
cd $DEPLOY_TICKET_DIR

echo No special instructions.
# echo "ACTION: Add your manual instuctions here..."
# read -p "Press enter when finished"

echo "******************"
echo "Deploy jars"
echo "******************"
cd $DEPLOY_TICKET_DIR

echo Create $CHUBOE_PROP_DEPLOY_PLUGINS_PATH folder if not already exists
sudo -u $CHUBOE_PROP_IDEMPIERE_OS_USER mkdir -p $CHUBOE_PROP_DEPLOY_PLUGINS_PATH
echo Create $CHUBOE_PROP_CUSTOM_PLUGINS_PATH folder if not already exists
sudo -u $CHUBOE_PROP_IDEMPIERE_OS_USER mkdir -p $CHUBOE_PROP_CUSTOM_PLUGINS_PATH

JAR_COUNT=$(ls -A *.jar | wc -l)
echo HERE: jar count: $JAR_COUNT
if [ $JAR_COUNT -gt 0 ]; then

    echo "HERE: copy jars"
    ls -la *.jar
    sudo -u idempiere cp *.jar $CHUBOE_PROP_DEPLOY_PLUGINS_PATH/.

    # read -p "Press enter to continue"

    echo "HERE: deploy jars"
    cd /opt/chuboe/idempiere-installation-script/utils/
    ./logilite_deploy_plugins.sh -S

fi

# read -p "Press enter to continue"
echo "******************"
echo "Deploy pack ins"
echo "******************"
cd $DEPLOY_TICKET_DIR

# Check to see if 2pack directory present - skip if no
PACK_RESULT=$([ -d $PACK_DIR ] && echo "Y" || echo "N")
echo HERE: Is 2Pack directory present: $PACK_RESULT
if [ $PACK_RESULT == "Y" ]; then

    echo "HERE: 2Pack folder found"
    ls -la $PACK_DIR/*.zip

    echo "HERE: copy 2packs"
    sudo -u idempiere mkdir -p /opt/idempiere-server/migration/zip_2pack/
    sudo -u idempiere cp $PACK_DIR/* /opt/idempiere-server/migration/zip_2pack/.

    # read -p "Press enter to continue"

    echo "HERE: restarting idempiere"
    sleep 20 # allow plugins to finish installing from last deployment
    sudo service idempiere stop
    sleep 20
    sudo service idempiere start

    echo "HERE: waiting 100 seconds for packins to deploy"
    sleep 100

    read -p "Press enter to continue - Confirm iDempiere restarted and pack ins where successful"
    sudo rm -r /opt/idempiere-server/migration/zip_2pack/*

fi

# read -p "Press enter to continue"
echo "******************"
echo "Execute sql"
echo "******************"
cd $DEPLOY_TICKET_DIR

echo No sql today
# psql -d $CHUBOE_PROP_DB_NAME -U $CHUBOE_PROP_DB_USERNAME -h $CHUBOE_PROP_DB_HOST -c "ADD_SQL_HERE"

# read -p "Press enter to continue"
echo "************************************"
echo "Update Must Have Roles with process permission"
echo "************************************"
cd $DEPLOY_TICKET_DIR

# no sleep if already slept
if [ $PACK_RESULT == "N" ]; then
    echo "HERE: waiting 30 seconds for packins from plugins to deploy"
    # sleep ensures processes are installed in prep for next step
    sleep 30
fi

echo "HERE: update must have role to allow execution of all processes not in menu"
psql -d $CHUBOE_PROP_DB_NAME -U $CHUBOE_PROP_DB_USERNAME -h $CHUBOE_PROP_DB_HOST -f /opt/chuboe/idempiere-installation-script/utils/deploy_musthave_role_update.sql

echo "************************************"
echo "Ending deploy of $DEPLOY_TICKET"
echo "************************************"
echo ""
